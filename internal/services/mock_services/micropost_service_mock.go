// Code generated by MockGen. DO NOT EDIT.
// Source: C:/Users/owner/Downloads/Develop/Go/go-gorm-net/internal/services/micropost_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	models "go-gorm-net/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMicropostServiceInterface is a mock of MicropostServiceInterface interface.
type MockMicropostServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMicropostServiceInterfaceMockRecorder
}

// MockMicropostServiceInterfaceMockRecorder is the mock recorder for MockMicropostServiceInterface.
type MockMicropostServiceInterfaceMockRecorder struct {
	mock *MockMicropostServiceInterface
}

// NewMockMicropostServiceInterface creates a new mock instance.
func NewMockMicropostServiceInterface(ctrl *gomock.Controller) *MockMicropostServiceInterface {
	mock := &MockMicropostServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMicropostServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMicropostServiceInterface) EXPECT() *MockMicropostServiceInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockMicropostServiceInterface) Create(micropost *models.Micropost) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", micropost)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockMicropostServiceInterfaceMockRecorder) Create(micropost interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockMicropostServiceInterface)(nil).Create), micropost)
}

// GetAll mocks base method.
func (m *MockMicropostServiceInterface) GetAll() ([]models.Micropost, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.Micropost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockMicropostServiceInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockMicropostServiceInterface)(nil).GetAll))
}

// GetByID mocks base method.
func (m *MockMicropostServiceInterface) GetByID(id int) (*models.Micropost, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", id)
	ret0, _ := ret[0].(*models.Micropost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockMicropostServiceInterfaceMockRecorder) GetByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockMicropostServiceInterface)(nil).GetByID), id)
}
